三.文件搜索命令
在Linux中 执行文件 命令 脚本只有一种方式 用绝对路径 
PATH 环境变量 (有了环境变量就不需要使用绝对路径再执行命令)
/home/zoe/bin:/home/zoe/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin 
搜索所有环境变量定义的变量 如果没找到 就会报错 自己写脚本要写绝对路径 或者把程序放在环境变量搜索的目录中
 文件搜索命令:
locate 文件名 (比find快 新建的找不到 不是在系统中搜索)
在后台数据库中按文件名搜索 后台数据库一天更新 (强制更新 updatedb )
/var/lib/mlocate(版本不同数据库名字可能不同)
只能搜索文件名 (/etc/updatedb.conf配置文件 whereis which也遵守配置文件的搜索规则)
命令搜索命令(只能搜索系统命令) (搜索命令所在路径及帮助文档所在位置)
whereis (命令所在位置 帮助文档的所在位置) (bin下所有人都能用)
-s  只查找可执行文件 
-m 只看帮助文档所在位置
which (命令所在位置 如果有别名能看到别名)
cd 是shel自带的 用whereis which 找不到
whatis(干什么的)
文件搜索命令 
find(功能强大 耗费系统资源 所有文件名搜索)
find 搜索范围 搜索条件
find / -name ruby (加通配符需要"") find / -name "ruby*" 
find / -name nouser 除 以下两种情况 没有所有者一般是垃圾文件 找到后应该手动删除
但在根目录下的 sys proc(内存环境 内核有可能在这两个文件进行交互) 中找到这样的文件是正常的 (如果 是内核产生的文件(内核是直接调用)有可能没有所有者)
或者是外来文件 (如 Windows是忽略所有者的概念 不是没有 在Windows中建立 用u盘转移到Linux中)
find /var/log -mtime(mmin) +10
-10 10天内修改的文件 +10 10天前修改的文件 10 10天当天修改的文件(24小时)
atime 文件访问时间
ctime 改变文件属性
mtime 修改文件内容
find . size 25k 查找文件大小是25k字节的文件(如果是M字节要用大写k小写)
默认单位是数据块(跟分区的时候说的数据块不同) 
一个数据块代表一个扇区(默认512字节)不写参数不行
find . size 10M
-25k 小于25k的文件
25k  等于25k的文件
+25k 大于25k的文件
find . -inum 262422 查找i节点是262422的文件 
find /etc -size +20k -a -size -50k 多条件查询 查找/etc下大于20k小于50k的文件
-a逻辑与 -o逻辑或
find /etc -size +20k -a -size -50k -exec ls -lh{}\; ({}\; -exec 的标准格式)
查找/etc下大于20k小于50k的文件 并显示详细信息 
-exec ls -lh{}\; 对结果执行操作
find /code inum 1056664 -exec rm -f{}\; 
※避免大范围索索 非常耗费系统资源
find是在系统中搜索符合条件的文件名 如果需要匹配 使用通配符 通配符是完全匹配

通配符:
* 匹配任意内容
? 匹配任意一个字符
[] 匹配任意一个中括号内的字符

字符串搜索命令grep
grep 选项 "字符串" 文件名 
-v 取反 -i忽略大小写 

find命令与grep命令的区别
find:在系统当中搜索符合条件的文件名,如果需要匹配.使用通配符匹配,通配符是完全匹配
grep:在文件当中搜索符合条件的字符串 如果需要匹配,使用正则表达式,正则表达式时包含匹配 
何时用正则表达式 何时用匹配符
如果匹配搜索的是文件名  通配符 完全匹配 
如果匹配搜索的是文件内容 正则表达式 包含匹配 (只要含有 输出那一行)

